/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import backend.Chatbot;
import backend.User;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Hamza Ali
 */
public class MainWindow extends javax.swing.JFrame {

    private final Chatbot bot;

    private TreeSet<User> users;

    private final File datFile = new File("./dat/users.dat");
    
    private String prevIntent;

    /**
     * Creates new form MainWindow
     *
     * @throws java.io.IOException
     */
    public MainWindow() throws IOException {
        initComponents();
        bot = new Chatbot();

        file2data();

        textField_input.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_input = new javax.swing.JButton();
        textField_input = new javax.swing.JTextField();
        scrollPane_output = new javax.swing.JScrollPane();
        textPane_output = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(415, 358));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        button_input.setText("Send");
        button_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_inputActionPerformed(evt);
            }
        });
        textField_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textField_inputKeyPressed(evt);
            }
        });

        textPane_output.setEditable(false);
        textPane_output.setToolTipText("");
        scrollPane_output.setViewportView(textPane_output);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollPane_output)
                    .addComponent(textField_input, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(button_input)
                        .addGap(0, 333, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane_output, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(button_input)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_inputActionPerformed
        userInput();
    }//GEN-LAST:event_button_inputActionPerformed

    private void textField_inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_inputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            userInput();    }//GEN-LAST:event_textField_inputKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        data2file();
    }//GEN-LAST:event_formWindowClosing

    //takes user input, displays it on window, and sends to chatbot
    private void userInput() {
        String in = textField_input.getText();
        if (!in.isEmpty()) {
            textField_input.setText("");

            if (in.equals("$users")) {
                System.out.println(users);
            }
            else if (in.equals("$intent")) {
                System.out.println(prevIntent);
            }
            else {
                StyledDocument out = textPane_output.getStyledDocument();
                Style style = out.addStyle("StyleName", null);
                StyleConstants.setForeground(style, Color.RED);

                try {
                    out.insertString(out.getLength(), in + "\n\n", style); //TODO maybe figure out how to make the text allign with the right side of the page.
                } catch (BadLocationException ex) {
                    System.out.println("ERROR: " + ex.toString());
                }

                try {
                    respond(in);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, ex.toString(), "EXCEPTION", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    //displays chatbots responce
    private void respond(String input) throws IOException {
        StyledDocument out = textPane_output.getStyledDocument();

        Style style = out.addStyle("StyleName", null);
        StyleConstants.setForeground(style, Color.BLUE);

        try {
            String output = bot.respond(input);
            if (bot.getIntent().equals(prevIntent) && !(prevIntent.equals("Default Fallback Intent") || prevIntent.equals("Search"))) {
                output = "There's no need to repeat yourself, I got you the first time.";
            }
            else if (bot.getIntent().equals("Search")) {
                output = bot.search(output.substring(0, output.indexOf("?")));
            }
            else if (bot.getIntent().equals("Username")) {
                output = (users.contains(bot.getUser())) ? "Hey " + bot.getUser().getName() + ". How can I help you?" : output;
            }
            else if (bot.getIntent().equals("Username - yes")) {
                users.add(bot.getUser());
            }
            prevIntent = bot.getIntent();
            out.insertString(out.getLength(), output + "\n\n", style);
        } catch (BadLocationException ex) {
            System.out.println("ERROR: " + ex.toString());
        }
    }

    //saves user data to file
    private void data2file() {
        //save all data before closing
        try {
            FileOutputStream fos = new FileOutputStream(datFile);
            ObjectOutputStream oos;
            oos = new ObjectOutputStream(fos);

            oos.writeObject(users);

            fos.close();
            oos.close();
        } catch (IOException ex) {
            System.out.println(ex.toString());
        }
    }

    //pulls user data from file
    private void file2data() {
        //load data from dat file
        try {
            FileInputStream fis = new FileInputStream(datFile);
            ObjectInputStream ois = new ObjectInputStream(fis);

            users = (TreeSet<User>) ois.readObject();

            fis.close();
            ois.close();
        } catch (IOException | ClassNotFoundException ex) {
            System.out.println(ex.toString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new MainWindow().setVisible(true);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "EXCEPTION", JOptionPane.ERROR_MESSAGE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_input;
    private javax.swing.JScrollPane scrollPane_output;
    private javax.swing.JTextField textField_input;
    private javax.swing.JTextPane textPane_output;
    // End of variables declaration//GEN-END:variables
}
